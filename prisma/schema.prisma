// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["relationJoins"]
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  username  String    @unique
  password  String
  createdAt DateTime  @default(now())
  products  Product[]
}

model Product {
  id          String   @id @default(uuid())
  name        String   @db.VarChar(255)
  createdAt   DateTime @default(now())
  belongsToId String
  belongsTo   User     @relation(fields: [belongsToId], references: [id])
  updates     Update[]
  @@unique([id, belongsToId])
}

enum UPDATE_STATUSES {
  PENDING
  IN_PROGRESS
  COMPLETED
}

model Update {
  id           String          @id @default(uuid())
  title        String
  body         String
  createdAt    DateTime        @default(now())
  updatedAt    DateTime        @updatedAt()
  status       UPDATE_STATUSES @default(IN_PROGRESS)
  version      String?
  asset        String?
  productId    String
  product      Product         @relation(fields: [productId], references: [id])
  updatePoints UpdatePoint[]
}

model UpdatePoint {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime
  name        String   @db.VarChar(255)
  description String
  updateId    String
  update      Update   @relation(fields: [updateId], references: [id])
}
